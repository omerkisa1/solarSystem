[gd_scene load_steps=20 format=2]

[ext_resource path="res://MeshInstance.gd" type="Script" id=1]
[ext_resource path="res://earth.gd" type="Script" id=2]
[ext_resource path="res://Camera.gd" type="Script" id=3]
[ext_resource path="res://2k_earth_daymap.jpg" type="Texture" id=4]
[ext_resource path="res://2k_sun.jpg" type="Texture" id=5]
[ext_resource path="res://moon.gd" type="Script" id=6]
[ext_resource path="res://DirectionalLight.gd" type="Script" id=7]
[ext_resource path="res://EarthOrbit.gd" type="Script" id=8]
[ext_resource path="res://MoonOrbit.gd" type="Script" id=9]

[sub_resource type="Shader" id=1]

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="SphereMesh" id=3]
material = SubResource( 2 )

[sub_resource type="SpatialMaterial" id=7]
albedo_texture = ExtResource( 5 )
emission_enabled = true
emission = Color( 1, 0.513726, 0, 1 )
emission_energy = 0.85
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="SphereMesh" id=5]

[sub_resource type="SpatialMaterial" id=10]
albedo_texture = ExtResource( 4 )

[sub_resource type="SphereMesh" id=8]

[sub_resource type="Shader" id=11]
code = "shader_type spatial;

uniform vec3 sun_position;  // Güneş'in pozisyonu
uniform vec3 earth_position;  // Dünya'nın pozisyonu
uniform float earth_radius;  // Dünya'nın yarıçapı

varying vec3 world_pos;  // Dünya pozisyonunu fragment shader'a iletmek için

// Vertex shader
void vertex() {
    world_pos = (WORLD_MATRIX * vec4(VERTEX, 1.0)).xyz;  // Dünya uzayındaki pozisyon
}

// Fragment shader
void fragment() {
    vec3 light_dir = normalize(sun_position - world_pos);  // Güneş'ten gelen ışık yönü
    vec3 earth_dir = normalize(earth_position - world_pos);  // Dünya'dan gelen yön

    // Dünya'nın gölgesini hesapla
    float shadow = step(0.0, dot(light_dir, earth_dir) - earth_radius);

    // Işıklandırmayı uygula
    ALBEDO = vec3(1.0) * shadow;  // Eğer gölgede değilse ışık uygula
}
"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/sun_position = null
shader_param/earth_position = null
shader_param/earth_radius = null

[sub_resource type="CylinderMesh" id=13]
top_radius = 10.0
height = 0.1

[node name="Spatial" type="Spatial"]

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.866025, 0.5, 0, -0.5, 0.866025, 0, 30, 20 )
near = 0.5
far = 5000.0
script = ExtResource( 3 )

[node name="sun" type="MeshInstance" parent="."]
transform = Transform( 15, 0, 0, 0, 15, 0, 0, 0, 15, -13.9928, -0.611645, -0.732413 )
mesh = SubResource( 3 )
material/0 = SubResource( 7 )
script = ExtResource( 1 )

[node name="DirectionalLight" type="DirectionalLight" parent="sun"]
transform = Transform( 0.0666667, 0, 0, 0, 0.0471405, -0.0471405, 0, 0.0471405, 0.0471405, 0, 0, 0 )
shadow_enabled = true
script = ExtResource( 7 )

[node name="EarthOrbit" type="Spatial" parent="."]
script = ExtResource( 8 )

[node name="earth" type="MeshInstance" parent="EarthOrbit"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, 50, 0, 0 )
mesh = SubResource( 5 )
skeleton = NodePath("../../sun")
material/0 = SubResource( 10 )
script = ExtResource( 2 )

[node name="MoonOrbit" type="Spatial" parent="EarthOrbit/earth"]
transform = Transform( 0.2, 0, 0, 0, 0.2, 0, 0, 0, 0.2, -10, 0, 0 )
script = ExtResource( 9 )

[node name="moon" type="MeshInstance" parent="EarthOrbit/earth/MoonOrbit"]
transform = Transform( 0.3, 0, 0, 0, 0.3, 0, 0, 0, 0.3, 60, 0, 0 )
mesh = SubResource( 8 )
skeleton = NodePath("../../../../sun")
material/0 = SubResource( 12 )
script = ExtResource( 6 )

[node name="MeshInstance" type="MeshInstance" parent="EarthOrbit"]
mesh = SubResource( 13 )
